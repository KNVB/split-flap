import { useEffect, useRef } from 'react';
import "./QQ.css";
export default function QQ() {
    const baseEl = useRef(null);
    const upperEl = useRef(null);
    const middleEl = useRef(null);
    const lowerEl = useRef(null);
    let counter = 0;
    let timing = 1000;
    let wordList = [<img alt="" src="img/1_100.png" />, <img alt="" src="img/2_100.png" />, <img alt="" src="img/3_100.png" />, <img alt="" src="img/4_100.png" />];
    let handler = e => {
        let element = e.target;
        console.log(element.id);
        switch (element.id) {
            case "upper":
                middleEl.current.classList.add("rotate90to0");
                upperEl.current.classList.replace("zIndex4", "zIndex2");
                break;
            case "middle":
                upperEl.current.innerHTML=baseEl.current.innerHTML;
				lowerEl.current.innerHTML=baseEl.current.innerHTML;
				middleEl.current.className="hide";
				upperEl.current.className="upperHalfCard-after zIndex4";
				lowerEl.current.className="lowerHalfCard-after zIndex2";
                break;
            case "lower":
                lowerEl.current.classList.replace("zIndex4","zIndex2");
				middleEl.current.classList.add("rotate_90to0");	
                break;
            default:
                break;          
        }
    }
    let backward=()=>{
        middleEl.current.innerHTML=baseEl.current.innerHTML;
        lowerEl.current.classList.add("rotate0to90");
        middleEl.current.className="upperHalfCard-after transform0to_90 zIndex4";
    }
    let forward = () => {        
        middleEl.current.innerHTML = baseEl.current.innerHTML;
        upperEl.current.classList.add("rotate0to_90");
        middleEl.current.className = "lowerHalfCard-after transform0to90 zIndex4";
    }
    useEffect(() => {
        const id = setInterval(() => {console.log("Kicked By interval"); backward() }, timing);
        return () => { clearInterval(id) }
    }, [])
    return (
        <div className='splitFlap'>
            <div
                className="fullCard-after zIndex2"
                id="base"
                ref={baseEl}>
                {wordList[counter + 1]}
            </div>
            <div
                className="upperHalfCard-after zIndex4"
                id="upper"
                onAnimationEnd={handler}
                ref={upperEl}>
                {wordList[counter]}
            </div>
            <div
                className="hide"
                id="middle"
                onAnimationEnd={handler}
                ref={middleEl}>

            </div>
            <div
                className="lowerHalfCard-after zIndex2"
                id="lower"
                onAnimationEnd={handler}
                ref={lowerEl}>
                {wordList[counter]}
            </div>
        </div>
    )
}
